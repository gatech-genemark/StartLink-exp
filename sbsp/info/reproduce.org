#+TITLE: Reproducing SBSP
#+SUBTITLE: The commands used to set up, reproduce, and graph results from the SBSP paper
#+AUTHOR: Karl Gemayel
#+Date: Mon 27 Apr 2020 10:37:05 EDT
#+OPTIONS: toc:2 H:3 num:3

#+LATEX_HEADER_EXTRA:  \usepackage{mdframed}
#+LATEX_HEADER_EXTRA: \BeforeBeginEnvironment{minted}{\begin{mdframed}}
#+LATEX_HEADER_EXTRA: \AfterEndEnvironment{minted}{\end{mdframed}}
#+LATEX_HEADER: \usepackage[margin=0.5in]{geometry}

* Downloading and installing
** Code
Downloading the code is fairly straightforward using =git=.

** Data
We provide the databases for /Enterobacterales/, /Actinobacteria/, /Archaea/, and /FCB group/, and the sequence and label files for the genomes with verified starts: /E. coli/, /H. salinarum/, /N. pharaonis/, /M. tuberculosis/. We also provide the steps to create a data base with for any ancestor using data that can be downloaded from NCBI's website.

* Code and data structure
After installing SBSP, you will have the following structure

#+begin_src dot :file dir.pdf :cmdline -Tpdf
   digraph{
     sbsp -> data;
     sbsp -> runs;
     sbsp -> lists;
     sbsp -> code;
     sbsp -> bin
   
     code -> python;
     code -> bash;
   
   
     data -> G1;
     data -> G2;
     data -> "...";
     data -> GN;

     G1 -> "sequence.fasta";
     G1 -> "ncbi.gff";
     G1 -> "verified.gff";

     python -> lib;
     python -> driver;
     }
#+end_src

#+RESULTS:
[[file:dir.pdf]]

** Bin
The python scripts can be located at 
** Data
The data directory contains all genomic raw information: mainly the sequence and labels files. If constructing databases from scratch, this directory will also include all genomes downloaded from NCBI.
** Runs
For this analysis, all runs executed by SBSP, GMS2, and Prodigal will be put in subdirectories for each genome. 
#+begin_src dot :file dir_runs.pdf :cmdline -Tpdf
  digraph {
    gms21 [label="gms2"]
    sbsp1 [label="sbsp"]
    prodigal1 [label="prodigal"]

    gms22 [label="gms2"]
    sbsp2 [label="sbsp"]
    prodigal2 [label="prodigal"]

  
  runs -> G1;
    runs -> G2;
    runs -> "...";
    runs -> GN;

    G1 -> gms21;
    G1 -> sbsp1;
    G1 -> prodigal1;
    G2 -> gms22;
    G2 -> sbsp2;
    G2 -> prodigal2;

  }
#+end_src

#+RESULTS:
[[file:dir_runs.pdf]]


* Running on verified genomes

SBSP takes as input:
- Query proteins: FASTA file
- Target protein database: Diamond database

It outputs:
- GFF file containing labels
- Multiple sequence alignment files for all queries
- details.csv: output file containing details of predictions



#+BEGIN_SRC bash
  # List of genomes with verified genes
  pf_list_verified=$lists/verified.list  # verified genomes
  pf_db_index=$db/index.csv  # database location files
  pf_sbsp_conf=$config/sbsp_defaults.conf # sbsp config file

  toggle_pbs="--pf-conf-pbs $config/pbs_defaults.conf"  # if PBS not installed, set this option to empty: ""
  sg=8   # number of genomes to run simutaneously (low number recommended)
  opt_verif="--fn-q-labels verified.gff --fn-q-labels-true verified.gff"

  $bin/sbsp_on_genome_list_py.sh --pf-q-list $pf_list_verified --simultaneous-genomes $sg --pd-work $pd_run --pf-sbsp-options $pf_sbsp_options  --pf-db-index $pf_db_index $opt_verif $toggle_pbs
#+END_SRC 

* GMS2 on metagenomes
** Run GMS2 on genome fragments
#+begin_src bash :session
$bin/run_tools_on_genome_fragments_py.sh --pf-genome-list $lists/verified.list --tools gms2 prodigal
#+end_src
* Collecting Data

* Tables and Graphs
** 

* Experiments

** Difference in 5' predictions on Representative Genomes
*** Data download
    #+begin_src bash
      pf_rep_bac=$lists/refseq_representative_bacteria.list
      pf_rep_arc=$lists/refseq_representative_archaea.list
      pf_assembly_bac=$metadata/assembly_summary.txt
      $bin/download_from_ncbi_py.sh --pf-assembly-summary $pf_assembly_bac --pf-data $data --pf-output-list

      # link ncbi as "tool" (for easy comparison wwith other tools)
      cat $pf_rep_bac $pf_rep_arc | grep -v gcfid | cut -f1 -d, | while read -r line; do
        mkdir -p $runs/$line; mkdir -p $runs/$line/ncbi;
        ln -s $data/$line/ncbi.gff $runs/$line/ncbi/ncbi.gff ;
      done
    #+end_src

*** Run GMS2 and Prodigal
    #+begin_src bash

      # Run on GMS2
      $bin/run_tool_on_genome_list_py.sh --tool gms2 --pf-genome-list $pf_rep_bac --type bacteria --dn-run gms2
      $bin/run_tool_on_genome_list_py.sh --tool gms2 --pf-genome-list $pf_rep_arc --type archaea --dn-run gms2

      # Run on Prodigal
      $bin/run_tool_on_genome_list_py.sh --tool prodigal --pf-genome-list $pf_rep_bac --type bacteria --dn-run prodigal
      $bin/run_tool_on_genome_list_py.sh --tool prodigal --pf-genome-list $pf_rep_arc --type archaea --dn-run prodigal
    #+end_src

*** Collect statistics
We can now collect the statistics and create the figures to compare GMS2, Prodigal, and NCBI.
     #+begin_src bash

       $bin/compare_tools_5prime_py.sh --pf-genome-lists $pf_rep_bac $pf_rep_arc --list-names Bacteria Archaea --dn-tools gms2 prodigal ncbi --tool-names GMS2 Prodigal NCBI
     #+end_src

**** 

**** Prodigal vs NCBI
**** GMS2 vs Prodigal
